@*
    // ***	 ** ****** ****** ****** ******* **     ** ****** ***   ** **** ****
    // ****  ** **  ** **  ** **  **  **  **  **   **  **  ** ****  ** *    *
    // ** ** ** **  ** ****** ******  **  **   ** **   ****** ** ** ** *    ***
    // **  **** **  ** **	  **  **  **  **    ***    **  ** **  **** *    *
    // **   *** ****** **	  **  ** *******     *     **  ** **   *** **** ****
    //
    // **************************************************************************
    // *                                                                		*
	// *           Admin Layout Changer Plugin by NopAdvance team               *
    // *			Copyright (c) NopAdvance LLP. All Rights Reserved			*
    // *                                                                       	*
    // **************************************************************************
    // *                                                                       	*
    // * Email:		contact@nopadvance.com										*
    // * Website:	https://nopadvance.com										*
    // *                                                                       	*
    // **************************************************************************
    // *                                                                       	*
    // * Please see the  License file for the full End User License Agreement. 	*
    // * The  complete license agreement is also available on  our  website at 	*
    // * https://nopadvance.com/license-terms									*
    // *                                                                       	*
    // * This  software / plugin  is furnished  under a license  and  may   be  *
    // * used  and modified  only in accordance with the terms of such license  *
    // * and with the inclusion of the above copyright notice.  This  software	*
    // * or any other copies thereof may not be  provided  or  otherwise  made	*
    // * available  to any other person.  No title to  and  ownership  of  the  *
    // * software is hereby transferred.                                        *
    // *                                                                       	*
    // * You may not reverse  engineer, decompile, defeat  license  encryption 	*
    // * mechanisms  or  disassemble this software product or software product 	*
    // * license.  NopAdvance may terminate this  license if you don't  comply 	*
    // * with any of the terms & conditions set forth in our  end user license	*
    // * agreement (EULA).  In such event , licensee agrees to return licensor	*
    // * or destroy  all copies of software  upon termination  of the license.	*
    // *                                                                       	*
    // **************************************************************************
*@
@model CustomerUserSettingsModel

@{
    //page title
    ViewBag.PageTitle = T("Admin.Configuration.Settings.CustomerUser").Text;
    //active menu item (system name)
    NopHtml.SetActiveMenuItemSystemName("Customer and user settings");
}

@{
    string verticalTab = (TabLayout)adminLayoutChangerSettings.TabLayoutId == TabLayout.Vertical ? "vertically-tab" : "";
}

<form asp-controller="Setting" asp-action="CustomerUser" method="post">
    <div class="content-header clearfix">
        <h1 class="float-left">
            @T("Admin.Configuration.Settings.CustomerUser")
        </h1>
        <div class="float-right">
            <button type="submit" name="save" class="btn btn-primary">
                <i class="far fa-save"></i>
                @T("Admin.Common.Save")
            </button>
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.CustomerUserSettingsButtons, additionalData = Model })
        </div>
    </div>
    <div asp-validation-summary="All"></div>

    <section class="content">
        <div class="container-fluid">
            <div class="form-horizontal">
                @await Component.InvokeAsync("SettingMode")
                <nop-tabs id="customersettings-cards" class="@verticalTab">
                    <nop-tab asp-name="customersettings-common" asp-icon="fas fa-info" asp-title="@T("Admin.Configuration.Settings.CustomerUser.BlockTitle.Common")" asp-default="true" asp-advanced="false">@await Html.PartialAsync("_CustomerUser.Common", Model)</nop-tab>
                    <nop-tab asp-name="customersettings-security" asp-icon="fas fa-shield-alt" asp-title="@T("Admin.Configuration.Settings.CustomerUser.BlockTitle.Password")"  asp-advanced="true">@await Html.PartialAsync("_CustomerUser.Security", Model)</nop-tab>
                    <nop-tab asp-name="customersettings-account" asp-icon="fas fa-user" asp-title="@T("Admin.Configuration.Settings.CustomerUser.BlockTitle.Account")" asp-advanced="true">@await Html.PartialAsync("_CustomerUser.Account", Model)</nop-tab>
                    <nop-tab asp-name="customersettings-profile" asp-icon="fas fa-user-circle" asp-title="@T("Admin.Configuration.Settings.CustomerUser.BlockTitle.Profile")" asp-advanced="true">@await Html.PartialAsync("_CustomerUser.Profile", Model)</nop-tab>
                    <nop-tab asp-name="customersettings-customerformfields" asp-icon="fas fa-align-justify" asp-title="@T("Admin.Configuration.Settings.CustomerUser.CustomerFormFields")" asp-advanced="false">@await Html.PartialAsync("_CustomerUser.CustomerFormFields", Model)</nop-tab>
                    <nop-tab asp-name="customersettings-addressformfields" asp-icon="far fa-address-book" asp-title="@T("Admin.Configuration.Settings.CustomerUser.AddressFormFields")" asp-advanced="false">@await Html.PartialAsync("_CustomerUser.AddressFormFields", Model)</nop-tab>

                    @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.CustomerUserSettingsButtons, additionalData = Model })
                </nop-tabs>
            </div>
        </div>
    </section>
    <script>
        $(document).ready(function () {
            $("#@Html.IdFor(model => model.MultiFactorAuthenticationSettings.ForceMultifactorAuthentication)").click(toggleForceMultifactorAuthentication);
            toggleForceMultifactorAuthentication();
        });

        function toggleForceMultifactorAuthentication() {
            warningValidation('@Url.Action("ForceMultifactorAuthenticationWarning", "Setting")',
                '@Html.NameFor(model => model.MultiFactorAuthenticationSettings.ForceMultifactorAuthentication)',
                {
                    forceMultifactorAuthentication: $('#@Html.IdFor(model => model.MultiFactorAuthenticationSettings.ForceMultifactorAuthentication)').is(':checked')
                });
        }
    </script>
</form>
